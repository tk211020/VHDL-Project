|8X8
COL[7] <= monster1:inst.col_Red[7]
COL[6] <= monster1:inst.col_Red[6]
COL[5] <= monster1:inst.col_Red[5]
COL[4] <= monster1:inst.col_Red[4]
COL[3] <= monster1:inst.col_Red[3]
COL[2] <= monster1:inst.col_Red[2]
COL[1] <= monster1:inst.col_Red[1]
COL[0] <= monster1:inst.col_Red[0]
CLOCK => scanf_gen:inst1.clockin
CLOCK => clk_gen:inst3.clock
COL_S[7] <= monster1:inst.col_Green[7]
COL_S[6] <= monster1:inst.col_Green[6]
COL_S[5] <= monster1:inst.col_Green[5]
COL_S[4] <= monster1:inst.col_Green[4]
COL_S[3] <= monster1:inst.col_Green[3]
COL_S[2] <= monster1:inst.col_Green[2]
COL_S[1] <= monster1:inst.col_Green[1]
COL_S[0] <= monster1:inst.col_Green[0]
ROW[7] <= monster1:inst.row_Red[7]
ROW[6] <= monster1:inst.row_Red[6]
ROW[5] <= monster1:inst.row_Red[5]
ROW[4] <= monster1:inst.row_Red[4]
ROW[3] <= monster1:inst.row_Red[3]
ROW[2] <= monster1:inst.row_Red[2]
ROW[1] <= monster1:inst.row_Red[1]
ROW[0] <= monster1:inst.row_Red[0]
ROW_S[7] <= monster1:inst.row_Green[7]
ROW_S[6] <= monster1:inst.row_Green[6]
ROW_S[5] <= monster1:inst.row_Green[5]
ROW_S[4] <= monster1:inst.row_Green[4]
ROW_S[3] <= monster1:inst.row_Green[3]
ROW_S[2] <= monster1:inst.row_Green[2]
ROW_S[1] <= monster1:inst.row_Green[1]
ROW_S[0] <= monster1:inst.row_Green[0]


|8X8|monster1:inst
CLK => col_Red[0]~reg0.CLK
CLK => col_Red[1]~reg0.CLK
CLK => col_Red[2]~reg0.CLK
CLK => col_Red[3]~reg0.CLK
CLK => col_Red[4]~reg0.CLK
CLK => col_Red[5]~reg0.CLK
CLK => col_Red[6]~reg0.CLK
CLK => col_Red[7]~reg0.CLK
CLK => col_Green[0]~reg0.CLK
CLK => col_Green[1]~reg0.CLK
CLK => col_Green[2]~reg0.CLK
CLK => col_Green[3]~reg0.CLK
CLK => col_Green[4]~reg0.CLK
CLK => col_Green[5]~reg0.CLK
CLK => col_Green[6]~reg0.CLK
CLK => col_Green[7]~reg0.CLK
CLK => row_Green[0]~reg0.CLK
CLK => row_Green[1]~reg0.CLK
CLK => row_Green[2]~reg0.CLK
CLK => row_Green[3]~reg0.CLK
CLK => row_Green[4]~reg0.CLK
CLK => row_Green[5]~reg0.CLK
CLK => row_Green[6]~reg0.CLK
CLK => row_Green[7]~reg0.CLK
CLK => cnt1[2].CLK
CLK => cnt1[1].CLK
CLK => cnt1[0].CLK
CLK => cnt2[2].CLK
CLK => cnt2[1].CLK
CLK => cnt2[0].CLK
CLK => cnt3[2].CLK
CLK => cnt3[1].CLK
CLK => cnt3[0].CLK
CLK => cnt4[2].CLK
CLK => cnt4[1].CLK
CLK => cnt4[0].CLK
x[0] => Equal3.IN3
x[0] => Equal2.IN3
x[0] => Equal1.IN3
x[0] => Equal0.IN3
x[1] => Equal3.IN2
x[1] => Equal2.IN2
x[1] => Equal1.IN2
x[1] => Equal0.IN2
col_Green[7] <= col_Green[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Green[6] <= col_Green[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Green[5] <= col_Green[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Green[4] <= col_Green[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Green[3] <= col_Green[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Green[2] <= col_Green[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Green[1] <= col_Green[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Green[0] <= col_Green[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row_Green[7] <= row_Green[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row_Green[6] <= row_Green[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row_Green[5] <= row_Green[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row_Green[4] <= row_Green[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row_Green[3] <= row_Green[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row_Green[2] <= row_Green[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row_Green[1] <= row_Green[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row_Green[0] <= row_Green[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Red[7] <= col_Red[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Red[6] <= col_Red[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Red[5] <= col_Red[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Red[4] <= col_Red[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Red[3] <= col_Red[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Red[2] <= col_Red[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Red[1] <= col_Red[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col_Red[0] <= col_Red[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row_Red[7] <= <GND>
row_Red[6] <= <GND>
row_Red[5] <= <GND>
row_Red[4] <= <GND>
row_Red[3] <= <GND>
row_Red[2] <= <GND>
row_Red[1] <= <GND>
row_Red[0] <= <GND>


|8X8|scanf_gen:inst1
clockin => counter[6].CLK
clockin => counter[5].CLK
clockin => counter[4].CLK
clockin => counter[3].CLK
clockin => counter[2].CLK
clockin => counter[1].CLK
clockin => counter[0].CLK
clockin => PULSE.CLK
clockout <= PULSE.DB_MAX_OUTPUT_PORT_TYPE


|8X8|loopcountingg:inst2
CLK => present_state[1].CLK
CLK => present_state[0].CLK
op[0] <= present_state[0].DB_MAX_OUTPUT_PORT_TYPE
op[1] <= present_state[1].DB_MAX_OUTPUT_PORT_TYPE


|8X8|clk_gen:inst3
1KHz <= div10_t:inst3.CLK_out
clock => div10_t:inst.CLK
100Hz <= div10_t:inst4.CLK_out
10Hz <= div10_t:inst5.CLK_out
1Hz <= div10_t:inst6.CLK_out


|8X8|clk_gen:inst3|div10_t:inst3
CLK_out <= 2.DB_MAX_OUTPUT_PORT_TYPE
CLK => 5.CLK
CLK => 3.CLK
CLK => 1.CLK
CLK => 2.CLK


|8X8|clk_gen:inst3|div10_t:inst2
CLK_out <= 2.DB_MAX_OUTPUT_PORT_TYPE
CLK => 5.CLK
CLK => 3.CLK
CLK => 1.CLK
CLK => 2.CLK


|8X8|clk_gen:inst3|div10_t:inst1
CLK_out <= 2.DB_MAX_OUTPUT_PORT_TYPE
CLK => 5.CLK
CLK => 3.CLK
CLK => 1.CLK
CLK => 2.CLK


|8X8|clk_gen:inst3|div10_t:inst
CLK_out <= 2.DB_MAX_OUTPUT_PORT_TYPE
CLK => 5.CLK
CLK => 3.CLK
CLK => 1.CLK
CLK => 2.CLK


|8X8|clk_gen:inst3|div10_t:inst4
CLK_out <= 2.DB_MAX_OUTPUT_PORT_TYPE
CLK => 5.CLK
CLK => 3.CLK
CLK => 1.CLK
CLK => 2.CLK


|8X8|clk_gen:inst3|div10_t:inst5
CLK_out <= 2.DB_MAX_OUTPUT_PORT_TYPE
CLK => 5.CLK
CLK => 3.CLK
CLK => 1.CLK
CLK => 2.CLK


|8X8|clk_gen:inst3|div10_t:inst6
CLK_out <= 2.DB_MAX_OUTPUT_PORT_TYPE
CLK => 5.CLK
CLK => 3.CLK
CLK => 1.CLK
CLK => 2.CLK


